1-pchisq(21.6,4)
(1-pchisq(21.6,4))*100
3:1
3:-1
-1:0.5
-1:0.11115
-1:0.9999999999995
-1:0.501
-1:0.6
-1:0.7
-1:0.6
-1:0.9
-1:0.999
starwars
mtcars
library(dplyr)
mtcars
PlantGrowth
PlantGrowth %>% group_by(group)
PlantGrowth %>% group_by(group) %>% summarise(n())
PlantGrowth %>% group_by(group) %>% summarise(count = n())
PlantGrowth %>% group_by(group) %>% summarise(count == n())
PlantGrowth %>% group_by(group) %>% summarise("count = n())
"
)
PlantGrowth %>% group_by(group) %>% summarise("count" = n())
PlantGrowth %>% group_by("group") %>% summarise("count" = n())
1-pnorm(0.3)
pnorm(0.3)
qbinom(0.975,size = 25, prob = 0.5)
pbinom(17,size = 25, prob = pnorm(0.3))
1-pbinom(17,size = 25, prob = pnorm(0.3))
qnorm(0.975)
qnorm(0.975)/5
1-pnorm(5*(0.392-0.3))
qbinom(0.95,size = 25, prob = 0.5)
1-pbinom(18,size = 25, prob = pnorm(0.3))
1-pbinom(16,size = 25, prob = pnorm(0.3))
qnorm(0.95)/5
1-pnorm(5*(0.329-0.3))
sqrt(10)*qnorm(0.975)
2-pnorm(4.2/sqrt(10))-pnorm(8.2/sqrt(10))
sqrt(10)*qnorm(0.95)
2-pnorm(3.2/sqrt(10))-pnorm(7.2/sqrt(10))
200/40
sqrt(5)*qnorm(0.95)
2-pnorm(3.2/sqrt(5))-pnorm(7.2/sqrt(5))
2-pnorm(1.68/sqrt(5))-pnorm(5.68/sqrt(5))
sqrt(2)*qnorm(0.95)
1-pnorm(1.33/sqrt(2))
sqrt(2)*qnorm(0.975)
1-pnorm(1.77/sqrt(2))-pnorm(-3.77/sqrt(2))
pt(2.07,df = 5)
1-pt(2.07,df = 5)
1-pt(2.07,df = 4.61)
??'mann whitney'
phyper(q = 4, m = 16, n = 88, k = 51)
phyper(q = 5, m = 17, n = 30, k = 16)
phyper(q = 5, m = 17, n = 13, k = 12)
fisher.test(c(12,5,4,9))
fisher.test(x=c(12,5,4,9))
fisher.test(x=matrix(12,5,4,9))
matrix(12,5,4,9)
matrix(c(12,5,4,9))
matrix(c(12,5,4,9),2,2)
matrix(c(12,4,5,9),2,2)
fisher.test(x=matrix(c(12,4,5,9),2,2))
0.035*
2
TRUE+2
matrix(c(2,'q',4,'m'),2,2)
typeof(matrix(c(2,'q',4,'m'),2,2))
matrix[2]
matrix(c(2,'q',4,'m'),2,2)[2]
matrix(c(2,'q',4,'m'),2,2)[3]
switch(x, new_x = 2)
x <- 3
switch(x, new_x = 2)
switch(x, new_x = 2)
y = switch(x, new_x = 2)
y = switch(x, 2)
y = switch(1, 2)
y = switch("new_x", 2)
switch("new_x".2)
switch("new_x",2)
switch(x, new_x = 2)
switch(1, new_x = 2)
switch("new_x", new_x = 2)
switch(new_x, new_x = 2)
my_plus = function(x,y){}
my_plus = function(x,y){
z <- x + y
}
my_plus(1,2)
test = my_plus(1,2)
my_plus = function(x,y){
z <- x + y
z
}
my_plus = function(x,y){
}
my_plus = function(x,y){
+ z <- x + y
+ z
+ }
my_plus = function(x,y){
z <- x + y
z
}
my_plus(1,2)
pchisq(1.197,df=1)
1-pchisq(1.197,df=1)
df <- c(1,2,3)
df <- data.frame(1,2,3)
df
df[1]
df <- data.frame(c(1,2,3),c(4,1,5))
df
df[1]
df[[1]]
switch(2,new_x1 = "red",new_x2 = "blue")
switch(new_x2,new_x1 = "red",new_x2 = "blue")
switch("new_x2",new_x1 = "red",new_x2 = "blue")
library(stringr)
str_detect(c("123","ayedg wuh iuw3p97y322","3456789","12shdfsidfuh fhui d 23 4"),"\\d{3}")
mtcars[1]
mtcars
mtcars$mpg
mtcars[,1]
typeof(mtcars[1])
c(1,2,3,45,66,2)
summary(c(1,2,3,45,66,2))
table(c(1,2,3,45,66,2))
table(c(1,2,3,45,66,2))[1]
names(table(c(1,2,3,45,66,2)))
data.frame(table(c(1,2,3,45,66,2))[1])
data.frame(table(c(1,2,3,45,66,2)))
shiny::runApp('dieroller_app')
sum(rep(1/6,6))
sum(rep(1/6,6)) == 1
runApp('dieroller_app')
runApp('dieroller_app')
runApp('dieroller_app')
c(1,seq(5,100,5)))
c(1,seq(5,100,5))
runApp('dieroller_app')
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Trainer name
#' @param hometown Hometown of the Trainer
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
data.frame('Name' = name, 'Hometown' = hometown, 'Number of Pokemon Seen' = pokedex, 'Number of Badges' = badges)
}
trainer()
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Trainer name
#' @param hometown Hometown of the Trainer
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
data.frame('Name' = name, 'Hometown' = hometown, '# Pokemon Seen' = pokedex, '# Badges' = badges)
}
trainer()
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Trainer name
#' @param hometown Hometown of the Trainer
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
data.frame('Name' = name, 'Hometown' = hometown, "# Pokemon Seen" = pokedex, '# Badges' = badges)
}
trainer()
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Trainer name
#' @param hometown Hometown of the Trainer
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
data.frame('Name' = name, 'Hometown' = hometown, "Pokedex" = pokedex, 'Badges' = badges)
}
trainer()
trainer(c('Ash','Misty'))
#' @export
#' @examples
#' # default
#' fair_die <- die()
#'
#' # another die with different sides
#' string_die <- die(c('a','b','c','d','e','f'))
#'
#' # biased die
#' biased_die <- die(prob = c(rep(0.1,5),0.5))
die <- function(sides = 1:6, prob = rep(1/6,6)){
check_sides(sides)
check_prob(prob)
attr(sides, "prob") <- prob
class(sides) = "die"
sides
}
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Name of trainer(s)
#' @param hometown Hometown of trainer(s)
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
output = c(name, hometown, pokedex, badges)
attr(output, "name") = name
attr(output, "hometown") = hometown
attr(output, "pokedex") = pokedex
attr(output, "badges")= badges
output
}
trainer(c('Ash','Misty'))
trainer()
trainer()$name
trainer()[0]
trainer()[1]
trainer()[2]
trainer(c('Ash','Misty'))[1]
trainer(c('Ash','Misty'))[2]
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
print(data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges")))
}
trainer(c('Ash','Misty'))
print.trainer(c('Ash','Misty'))
#' @title trainer
#' @description Constructor file that creates a trainer object
#' @param name Name of trainer(s)
#' @param hometown Hometown of trainer(s)
#' @param pokedex Number of pokemon seen in pokedex
#' @param badges Number of badges won
#' @return A 'trainer' object
trainer <- function(name = 'Diamond', hometown = 'Twinleaf Town', pokedex = 0, badges = 0){
if (pokedex < 0 | pokedex > 151){
stop('Error: There are 151 Pokemon in Sinnoh')
}
if (badges < 0 | badges > 8){
stop('Error: There are 8 possible gym badges')
}
output = c(name, hometown, pokedex, badges)
attr(output, "name") = name
attr(output, "hometown") = hometown
attr(output, "pokedex") = pokedex
attr(output, "badges")= badges
class(output) = "trainer"
output
}
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
print(data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges")))
}
trainer()
library(stringr)
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
str_replace(names(trainer_as_df),pattern = ".", replacement = " ")
}
print.trainer(c('Ash','Misty'))
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
str_replace(names(trainer_as_df),pattern = "\\.", replacement = " ")
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
str_replace(names(trainer_as_df),pattern = ".", replacement = " ")
trainer_as_df
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
str_replace(names(trainer_as_df),pattern = ".", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
str_replace(names(trainer_as_df),pattern = "\\.", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace(names(trainer_as_df),pattern = "\\.", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace(names(trainer_as_df),pattern = ".", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace(names(trainer_as_df),pattern = "\.", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace(names(trainer_as_df),pattern = "\\.", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace_all(names(trainer_as_df),pattern = "\\.", replacement = " ")
print(trainer_as_df)
}
trainer()
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace_all(names(trainer_as_df),pattern = "\\.", replacement = " ") # replace dots in dataframe headers with spaces
trainer_as_df %>% arrange(name)
print(trainer_as_df)
}
trainer(c('Ash','Misty'))
library(dplyr)
trainer(c('Ash','Misty'))
trainer(c('zz','Misty'))
#' @title print.trainer
#' @description Function that prints a 'trainer' object
#' @param x A 'trainer' object
#' @return Print statement for the dataframe of trainer object with attributes
#' @export
print.trainer <- function(x) {
cat('POKEMON TRAINERS IN SINNOH\n')
trainer_as_df = data.frame('name' = attr(x,"name"), 'hometown' = attr(x, "hometown"),
'number of pokemon seen' = attr(x, "pokedex"), 'number of badges' = attr(x, "badges"))
names(trainer_as_df) = str_replace_all(names(trainer_as_df),pattern = "\\.", replacement = " ") # replace dots in dataframe headers with spaces
trainer_as_df = trainer_as_df %>% arrange(name)
print(trainer_as_df)
}
trainer(c('zz','Misty'))
dawn = trainer('Dawn', hometown = 'Twinleaf Town', pokedex = 80, badges = 5)1
ash = trainer('Ash', hometown = 'Pallet Town', pokedex = 100, badges = 8)
dawn = trainer('Dawn', hometown = 'Twinleaf Town', pokedex = 80, badges = 5)
ash
c(ash,dawn)
ash
setwd('..')
setwd('Work')
setwd('WellDone/taarifa')
setwd('report')
source('../code/data_analysis.R')
library(ggplot2)
library(dplyr)
library(knitr)
ggplot(data = dat_year) +
geom_histogram(aes(x = construction_year, fill = status_group), bins = 10) +
labs(x = 'Construction Year', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Construction Year') +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) # default ggplot2 colours in green-blue-red
ggplot(data = dat_year) +
geom_histogram(aes(x = construction_year, fill = status_group), bins = 10, col = 'white') +
labs(x = 'Construction Year', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Construction Year') +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) # default ggplot2 colours in green-blue-red
ggplot(data = dat_year) +
geom_histogram(aes(x = construction_year, fill = status_group), bins = 10, col = 'black') +
labs(x = 'Construction Year', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Construction Year') +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) # default ggplot2 colours in green-blue-red
ggplot(data = dat_year) +
geom_histogram(aes(x = construction_year, fill = status_group), bins = 10, col = 'grey') +
labs(x = 'Construction Year', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Construction Year') +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) # default ggplot2 colours in green-blue-red
ggplot(data = dat_height) +
geom_histogram(aes(x = gps_height, fill = status_group), bins = 5, col = 'grey') +
labs(x = 'Altitude', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Altitude') +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) # default ggplot2 colours in green-blue-red
ggplot(data = dat_population) +
geom_histogram(aes(x = population, fill = status_group), bins = 10, col = 'grey') +
labs(x = 'Population (log scale)', y = 'Number of Wells', fill = 'Status') +
ggtitle('Status of Wells by Population')  +
scale_fill_manual(values = c('#00BA38','#619CFF','#F8766D')) + # default ggplot2 colours in green-blue-red
scale_x_log10()
